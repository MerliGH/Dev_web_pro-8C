"""
Django settings for demo project.

Generated by 'django-admin startproject' using Django 5.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
##! CREA DIRECCIONES DINAMICAS EN EL ARBOL DE PROYECTO QUE UNO TENGA
##! ES PARA QUE NO SE TENGA QUE GENERAL UN PATH PARA CADA COSA DE FORMA MANUAL
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
##! Es el codigo de seguridad, sin eso el cliente no se puede conectar
##! Este comprueba con el token, dice, ese es, o deja pasar
SECRET_KEY = 'django-insecure-1c(rz)a5!9)u&jh95%4$&t!cx0qw*42q*kz(x@-5*98jkzytd0'

# SECURITY WARNING: don't run with debug turned on in production!
##! True solo valida si estas en producci√≥n o en el servidor de pruebas
##! True para que puedas debuguear, false, pues no (En produccion nunca deben pasar esa variable como True)
DEBUG = True

##! TODOS LOS DOMINIOS DONDE VENDRAN LOS REQUESTS DE LOS CLIENTES
##! TODOS? TODOS, ejemplo: MIDOMINIO.COM? MI DOMINIO.COM, PUERTO ESPECFICO? : PUERTO

ALLOWED_HOSTS = []


# Application definition
##! Viene un arreglo como vienen como base, las que uno hace, y las que traemos (de terceros) 
##! Uno tambien hace librerias pero a diferente nivel, configuran esa parte o se deja todo junto
##! Se separa por comentarios nada mas

INSTALLED_APPS = [
     #BASE APPS
    'django.contrib.admin',
    'django.contrib.auth',

    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # LOCAL APPS
    ##! Digamos que se van a llamar
    # 'home',
    # 'core',
    # 'api',

    ##! Uno pone la funcionalidad qeue uno quiere

    #THIRD PARTY APPS
    'rest_framework',

    ##! Ya se pueden hacer todo para el proyecto
    ##! Si se quiere tener un login basado en el framework, se agrega el login ahi de rest
    ##! Quiza sea firebase u otro
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


##! Ahi le decimos donde van a estar los templates
##! En que tipo de templates vamos a utilizar (DIRECTORIOS estara en ["templates])
ROOT_URLCONF = 'demo.urls'

##! TEMPLATES, LA DE LAS PAGINAS.
##! PORQUE SE TIENNE DIFERENTES ATENCIONES Y FUNCIONES DENTRO DE TU MODULO PARA QUE SE PUEDA RENDERIZAR Y LA PUEDA VER EL USUARIO
##! PERO ESA MISMA RENDERIZACION LIGARA EL CONTROLADOR - VISTA -LOGICA DEL TEMPLATE A TRAVES DE LA URL
##! EN CUANTO SE APLIQUE EL REQUEST, EL NAVEGADOR VA A JALARLO
##! LOCALIZAR LISTAS, RUTAS ABS, ESTATICOS, LO HARA LA VARIABLE

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ["templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'demo.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        #'ENGINE': 'django.db.backends.sqlite3',
        "ENGINE": "django.db.backends.postgresql",
        "NAME": "pamasys_db",
        "USER": "pamasys_user",
        "PASSWORD": "PAMASYS_user12",
        "HOST": "127.0.0.1",
        "PORT": "5432",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
